 <?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dome.marketplace.accessnode</groupId>
    <artifactId>it</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.org.apache.maven.plugins.maven-surefire-plugin>3.0.0-M5</version.org.apache.maven.plugins.maven-surefire-plugin>
        <version.io.kokuwa.maven.k3s-plugin>1.2.4</version.io.kokuwa.maven.k3s-plugin>
        <version.io.kokuwa.helm-maven-plugin>6.13.0</version.io.kokuwa.helm-maven-plugin>

    </properties>

    <build>
        <plugins>
            <!-- copy the charts to the target repo to keep the sources clean -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions> 
                    <execution>
                        <id>copy-resources-testnode</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/charts/blockchain-testnode</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/charts/blockchain-testnode</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution> 
                    <execution>
                        <id>copy-resources-provider</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/charts/provider</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/charts/accessnode</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution> 
                    <execution>
                        <id>copy-resources-consumer</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/charts/consumer</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/charts/accessnode</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-namespaces</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/k3s/namespaces</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/charts/namespaces</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- render the charts -->
            <plugin>
                <groupId>io.kokuwa.maven</groupId>
                <artifactId>helm-maven-plugin</artifactId>
                <version>${version.io.kokuwa.helm-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>template-provider</id>
                        <goals>
                            <goal>init</goal>
                            <goal>dependency-build</goal>
                            <goal>template</goal>
                        </goals>
                        <phase>test-compile</phase>
                        <configuration>
                            <chartDirectory>${project.build.directory}/charts/provider</chartDirectory>
                            <skipTemplate>false</skipTemplate>
                            <templateGenerateName>true</templateGenerateName>
                            <templateOutputDir>${project.build.directory}/k3s/provider</templateOutputDir>
                            <additionalArguments>--name-template=provider --namespace=provider --set deployment.blockchain.userEthereumAddress=0x72b440177bcDfD339eF00ffF6B78c3620c09c469 --set deployment.privateKey=0x304d170fb355df65cc17ef7934404fe9baee73a1244380076436dec6fafb1e1f</additionalArguments>
                        </configuration>
                    </execution> 
                    <execution>
                        <id>template-consumer</id>
                        <goals>
                            <goal>init</goal>
                            <goal>dependency-build</goal>
                            <goal>template</goal>
                        </goals>
                        <phase>test-compile</phase>
                        <configuration>
                            <chartDirectory>${project.build.directory}/charts/consumer</chartDirectory>
                            <skipTemplate>false</skipTemplate>
                            <templateGenerateName>true</templateGenerateName>
                            <templateOutputDir>${project.build.directory}/k3s/consumer</templateOutputDir>
                            <additionalArguments>--name-template=consumer --namespace=consumer --set deployment.blockchain.userEthereumAddress=0x40ec977Bd68917E8ffd7A4F3a439ab77149B86e5 --set deployment.privateKey=0x041de193683f117a4b0f0b94f8e3e98d9dcf233010a538c6662c41a18188e038</additionalArguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>template-testnode</id>
                        <goals>
                            <goal>init</goal>
                            <goal>dependency-build</goal>
                            <goal>template</goal>
                        </goals>
                        <phase>test-compile</phase>
                        <configuration>
                            <chartDirectory>${project.build.directory}/charts/blockchain-testnode</chartDirectory>
                            <skipTemplate>false</skipTemplate>
                            <templateGenerateName>true</templateGenerateName>
                            <templateOutputDir>${project.build.directory}/k3s/blockchain-testnode</templateOutputDir>
                            <additionalArguments>--name-template=testnode --namespace=testnode</additionalArguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.kokuwa.maven</groupId>
                <artifactId>k3s-maven-plugin</artifactId>
                <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                <executions>
                    <execution>
                        <id>create-namespaces</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                            <goal>image</goal>
                            <goal>apply</goal>
                        </goals>
                        <configuration>
                            <failIfExists>false</failIfExists>
                            <manifests>${project.build.directory}/k3s/namespaces</manifests>
                        </configuration>
                    </execution>
                    <execution>
                        <id>apply-consumer</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <configuration>
                            <failIfExists>false</failIfExists>
                            <manifests>${project.build.directory}/k3s</manifests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>